1 - Weekly subdomain monitoring: 13 new subs

subfinder -d domain.com > date1_subs_domain.com
subfinder -d domain.com > date2_subs_domain.com

grep -Fxv -f date1_subs_domain.com date2_subs_domain.com > newsubs

✅New subs > New areas to test > New bugs


-----------------------------------------------------------------------------------------------------


2 - Information disclosure via JWT tokens has been identified and rewarded 

Method:

1. Visit the specified URL: https://lnkd.in/dGcxDjFX

2. Look for keywords such as token=, key=, eyJ, etc.

3. URLs with parameters will often redirect to specific locations containing the JWT token directly.

4. Decode the token using jwt.io. 


Try : echo site.com | waybackurls | grep token= | httpx -mc -ct 200,302,301

------------------------------------------------------------------------------------------------------

3 - > Recon with waymore

1- open wayback machine 
2- search on "=http"
3- i found open redirect vulnérability
test,example,com/redirect/?testURL=
4- add javascript​:alert(1)


---------------------------------------------------------------------------------------------------------


 4 - > How I Found a Local File Inclusion (LFI) Vulnerability 🚀

🔍 Step 1: Identifying the Target
While testing the endpoint /linnaeus_ng/shared/tools/remote_service.php, I noticed it was accepting POST requests. This hinted at potential file handling.


🛠 Step 2: Crafting the Payload
I modified the request to include:

url=file:///etc/passwd

This is a common LFI payload that attempts to read system files.


📡 Step 3: Sending the Request
I sent the request using Burp Suite, ensuring the payload was properly encoded.


📜 Step 4: Analyzing the Response
Got a 200 OK response with the contents of /etc/passwd:

root:x:0:0:root:/root:/bin/bash 

This confirmed LFI! 🚀

🔥 Step 5: Exploitation & Next Steps

Tried fetching other sensitive files like config.php.

--------------------------------------------------------------------------------------------------------------



